第三步：本地创建MVC文件夹结构
3.1 克隆仓库到本地
bash
# 复制仓库URL（在GitHub仓库页面点击绿色"Code"按钮）
git clone https://github.com/你的用户名/book-management-system.git
cd book-management-system
3.2 创建完整的MVC文件夹结构
使用以下命令创建文件夹结构：

Windows (PowerShell):

powershell
# 创建主目录结构
mkdir -Force app,public,vendor,storage,tests
mkdir -Force app/controllers,app/models,app/views,app/config,app/core,app/middleware
mkdir -Force app/views/layouts,app/views/books,app/views/authors,app/views/categories,app/views/borrow,app/views/dashboard
mkdir -Force public/css,public/js,public/images,public/uploads/book_covers
mkdir -Force storage/logs,storage/cache
mkdir -Force tests/Unit,tests/Feature

# 创建所有必要的文件
@"
# 图书管理系统

基于MVC架构的图书管理系统，包含完整的图书管理、借阅管理功能。

## 功能特性
- 📚 图书信息管理
- 👥 作者管理
- 📂 分类管理
- 🔐 用户认证
- 📖 图书借阅/归还
- 📊 数据统计

## 技术栈
- PHP 7.4+
- MySQL 5.7+
- HTML5/CSS3/JavaScript
- Bootstrap 5

## 安装说明
1. 克隆项目
2. 配置数据库
3. 导入SQL文件
4. 访问网站
"@ | Out-File -FilePath README.md -Encoding UTF8
Mac/Linux (Terminal):

bash
#!/bin/bash

# 创建主目录结构
mkdir -p app/{controllers,models,views,config,core,middleware}
mkdir -p app/views/{layouts,books,authors,categories,borrow,dashboard}
mkdir -p public/{css,js,images,uploads/book_covers}
mkdir -p storage/{logs,cache}
mkdir -p tests/{Unit,Feature}

# 创建README.md
cat > README.md << 'EOF'
# 图书管理系统

基于MVC架构的图书管理系统，包含完整的图书管理、借阅管理功能。

## 功能特性
- 📚 图书信息管理
- 👥 作者管理
- 📂 分类管理
- 🔐 用户认证
- 📖 图书借阅/归还
- 📊 数据统计

## 技术栈
- PHP 7.4+
- MySQL 5.7+
- HTML5/CSS3/JavaScript
- Bootstrap 5

## 安装说明
1. 克隆项目
2. 配置数据库
3. 导入SQL文件
4. 访问网站
EOF
第四步：创建核心文件
4.1 创建入口文件
bash
# 创建public/index.php
cat > public/index.php << 'EOF'
<?php
/**
 * 图书管理系统 - 入口文件
 */

// 显示错误信息（开发环境）
ini_set('display_errors', 1);
error_reporting(E_ALL);

// 定义常量
define('ROOT_PATH', dirname(__DIR__));
define('APP_PATH', ROOT_PATH . '/app');
define('PUBLIC_PATH', __DIR__);

// 自动加载类
spl_autoload_register(function ($className) {
    $file = APP_PATH . '/' . str_replace('\\', '/', $className) . '.php';
    if (file_exists($file)) {
        require_once $file;
    }
});

// 引入配置文件
require_once APP_PATH . '/config/config.php';

// 简单的路由处理
$request = $_SERVER['REQUEST_URI'];
$path = parse_url($request, PHP_URL_PATH);

// 移除基础路径
$basePath = '/book-management-system';
if (strpos($path, $basePath) === 0) {
    $path = substr($path, strlen($basePath));
}

// 路由匹配
switch ($path) {
    case '/':
    case '':
        require APP_PATH . '/controllers/BookController.php';
        $controller = new BookController();
        $controller->index();
        break;
    case '/books':
        require APP_PATH . '/controllers/BookController.php';
        $controller = new BookController();
        $controller->index();
        break;
    case '/books/create':
        require APP_PATH . '/controllers/BookController.php';
        $controller = new BookController();
        $controller->create();
        break;
    default:
        http_response_code(404);
        echo "页面未找到 - 404";
        break;
}
EOF
4.2 创建配置文件
bash
# 创建app/config/config.php
cat > app/config/config.php << 'EOF'
<?php
/**
 * 应用配置文件
 */

return [
    'app' => [
        'name' => '图书管理系统',
        'version' => '1.0.0',
        'debug' => true
    ],
    'database' => [
        'host' => 'localhost',
        'dbname' => 'book_management',
        'username' => 'root',
        'password' => '',
        'charset' => 'utf8mb4'
    ],
    'paths' => [
        'uploads' => dirname(__DIR__) . '/../public/uploads/',
        'views' => dirname(__DIR__) . '/views/'
    ]
];
EOF
4.3 创建基础控制器
bash
# 创建app/controllers/BaseController.php
cat > app/controllers/BaseController.php << 'EOF'
<?php
/**
 * 基础控制器类
 */
class BaseController {
    
    /**
     * 渲染视图
     */
    protected function render($view, $data = []) {
        // 提取数据到变量中
        extract($data);
        
        // 包含头部
        $headerFile = APP_PATH . '/views/layouts/header.php';
        if (file_exists($headerFile)) {
            require_once $headerFile;
        }
        
        // 包含主体视图
        $viewFile = APP_PATH . "/views/{$view}.php";
        if (file_exists($viewFile)) {
            require_once $viewFile;
        } else {
            throw new Exception("视图文件不存在: {$viewFile}");
        }
        
        // 包含底部
        $footerFile = APP_PATH . '/views/layouts/footer.php';
        if (file_exists($footerFile)) {
            require_once $footerFile;
        }
    }
    
    /**
     * 重定向
     */
    protected function redirect($url) {
        header("Location: {$url}");
        exit();
    }
    
    /**
     * 获取POST数据
     */
    protected function getPost($key, $default = null) {
        return isset($_POST[$key]) ? trim($_POST[$key]) : $default;
    }
    
    /**
     * 返回JSON响应
     */
    protected function json($data) {
        header('Content-Type: application/json');
        echo json_encode($data, JSON_UNESCAPED_UNICODE);
        exit();
    }
    
    /**
     * 验证必填字段
     */
    protected function validateRequired($fields, $data) {
        $errors = [];
        foreach ($fields as $field) {
            if (empty($data[$field])) {
                $errors[] = "字段 '{$field}' 是必填的";
            }
        }
        return $errors;
    }
}
EOF
4.4 创建图书控制器
bash
# 创建app/controllers/BookController.php
cat > app/controllers/BookController.php << 'EOF'
<?php
/**
 * 图书控制器
 */
require_once 'BaseController.php';
require_once APP_PATH . '/models/Book.php';
require_once APP_PATH . '/models/Database.php';

class BookController extends BaseController {
    private $bookModel;
    
    public function __construct() {
        $this->bookModel = new Book();
    }
    
    /**
     * 显示图书列表
     */
    public function index() {
        try {
            $books = $this->bookModel->getAllBooks();
            
            $this->render('books/index', [
                'title' => '图书列表',
                'books' => $books,
                'totalCount' => count($books)
            ]);
        } catch (Exception $e) {
            $this->render('error', [
                'title' => '错误',
                'message' => $e->getMessage()
            ]);
        }
    }
    
    /**
     * 显示添加图书表单
     */
    public function create() {
        $this->render('books/create', [
            'title' => '添加图书',
            'action' => 'create'
        ]);
    }
    
    /**
     * 处理添加图书表单提交
     */
    public function store() {
        if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
            $this->redirect('/books');
            return;
        }
        
        try {
            $bookData = [
                'title' => $this->getPost('title'),
                'author' => $this->getPost('author'),
                'isbn' => $this->getPost('isbn'),
                'publisher' => $this->getPost('publisher'),
                'publish_year' => $this->getPost('publish_year'),
                'category' => $this->getPost('category'),
                'price' => $this->getPost('price'),
                'description' => $this->getPost('description')
            ];
            
            // 验证必填字段
            $requiredFields = ['title', 'author', 'isbn'];
            $errors = $this->validateRequired($requiredFields, $bookData);
            
            if (!empty($errors)) {
                $this->render('books/create', [
                    'title' => '添加图书',
                    'errors' => $errors,
                    'book' => $bookData
                ]);
                return;
            }
            
            // 保存图书
            if ($this->bookModel->createBook($bookData)) {
                $this->redirect('/books?success=1');
            } else {
                throw new Exception('添加图书失败');
            }
            
        } catch (Exception $e) {
            $this->render('books/create', [
                'title' => '添加图书',
                'errors' => [$e->getMessage()],
                'book' => $bookData
            ]);
        }
    }
}
EOF
4.5 创建数据库模型
bash
# 创建app/models/Database.php
cat > app/models/Database.php << 'EOF'
<?php
/**
 * 数据库连接类
 */
class Database {
    private $connection;
    private static $instance = null;
    
    private function __construct() {
        $config = require APP_PATH . '/config/config.php';
        $dbConfig = $config['database'];
        
        try {
            $dsn = "mysql:host={$dbConfig['host']};dbname={$dbConfig['dbname']};charset={$dbConfig['charset']}";
            $this->connection = new PDO($dsn, $dbConfig['username'], $dbConfig['password']);
            $this->connection->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $this->connection->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die("数据库连接失败: " . $e->getMessage());
        }
    }
    
    /**
     * 获取单例实例
     */
    public static function getInstance() {
        if (self::$instance === null) {
            self::$instance = new self();
        }
        return self::$instance;
    }
    
    /**
     * 获取数据库连接
     */
    public function getConnection() {
        return $this->connection;
    }
    
    /**
     * 执行查询
     */
    public function query($sql, $params = []) {
        $stmt = $this->connection->prepare($sql);
        $stmt->execute($params);
        return $stmt;
    }
    
    /**
     * 获取所有记录
     */
    public function fetchAll($sql, $params = []) {
        $stmt = $this->query($sql, $params);
        return $stmt->fetchAll();
    }
    
    /**
     * 获取单条记录
     */
    public function fetchOne($sql, $params = []) {
        $stmt = $this->query($sql, $params);
        return $stmt->fetch();
    }
}
EOF
4.6 创建图书模型
4.6 创建图书模型
bash
# 创建app/models/Book.php
cat > app/models/Book.php << 'EOF'
<?php
/**
 * 图书模型
 */
require_once 'Database.php';

class Book {
    private $db;
    private $table = 'books';
    
    public function __construct() {
        $this->db = Database::getInstance();
    }
    
    /**
     * 获取所有图书
     */
    public function getAllBooks() {
        // 模拟数据 - 在实际项目中这里会查询数据库
        return [
            [
                'id' => 1,
                'title' => 'PHP编程基础',
                'author' => '张三',
                'isbn' => '9787111234567',
                'publisher' => '人民邮电出版社',
                'publish_year' => 2023,
                'category' => '编程',
                'price' => 59.80,
                'status' => '在库'
            ],
            [
                'id' => 2,
                'title' => 'MySQL数据库管理',
                'author' => '李四',
                'isbn' => '9787111234568',
                'publisher' => '清华大学出版社',
                'publish_year' => 2022,
                'category' => '数据库',
                'price' => 69.90,
                'status' => '借出'
            ],
            [
                'id' => 3,
                'title' => 'Web前端开发',
                'author' => '王五',
                'isbn' => '9787111234569',
                'publisher' => '电子工业出版社',
                'publish_year' => 2023,
                'category' => '前端',
                'price' => 79.00,
                'status' => '在库'
            ]
        ];
    }
    
    /**
     * 根据ID获取图书
     */
    public function getBookById($id) {
        $books = $this->getAllBooks();
        foreach ($books as $book) {
            if ($book['id'] == $id) {
                return $book;
            }
        }
        return null;
    }
    
    /**
     * 创建图书
     */
    public function createBook($data) {
        // 在实际项目中这里会插入数据库
        // 这里返回true模拟成功
        return true;
    }
    
    /**
     * 更新图书
     */
    public function updateBook($id, $data) {
        // 在实际项目中这里会更新数据库
        return true;
    }
    
    /**
     * 删除图书
     */
    public function deleteBook($id) {
        // 在实际项目中这里会删除数据库记录
        return true;
    }
    
    /**
     * 搜索图书
     */
    public function searchBooks($keyword) {
        $books = $this->getAllBooks();
        $result = [];
        
        foreach ($books as $book) {
            if (stripos($book['title'], $keyword) !== false || 
                stripos($book['author'], $keyword) !== false) {
                $result[] = $book;
            }
        }
        
        return $result;
    }
}
EOF
4.7 创建视图文件
创建布局头部
bash
# 创建app/views/layouts/header.php
cat > app/views/layouts/header.php << 'EOF'
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo isset($title) ? $title . ' - ' : ''; ?>图书管理系统</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .sidebar {
            min-height: calc(100vh - 56px);
            background-color: #f8f9fa;
        }
        .main-content {
            min-height: calc(100vh - 56px);
        }
        .book-card {
            transition: transform 0.2s;
        }
        .book-card:hover {
            transform: translateY(-5px);
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fas fa-book"></i> 图书管理系统
            </a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/books">图书管理</a>
                <a class="nav-link" href="/borrow">借阅管理</a>
                <a class="nav-link" href="/authors">作者管理</a>
            </div>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <!-- 侧边栏 -->
            <div class="col-md-3 col-lg-2 sidebar d-md-block collapse">
                <div class="position-sticky pt-3">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link active" href="/books">
                                <i class="fas fa-book me-2"></i> 图书列表
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/books/create">
                                <i class="fas fa-plus me-2"></i> 添加图书
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/borrow">
                                <i class="fas fa-exchange-alt me-2"></i> 借阅管理
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/categories">
                                <i class="fas fa-tags me-2"></i> 分类管理
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- 主内容区 -->
            <main class="col-md-9 ms-sm-auto col-lg-10 main-content px-md-4">
EOF
创建布局底部
bash
# 创建app/views/layouts/footer.php
cat > app/views/layouts/footer.php << 'EOF'
            </main>
        </div>
    </div>

    <footer class="bg-dark text-white mt-5 py-3">
        <div class="container text-center">
            <p>&copy; 2024 图书管理系统. 基于MVC架构开发.</p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // 简单的确认对话框
        function confirmDelete(message = '确定要删除吗？') {
            return confirm(message);
        }
        
        // 显示成功消息
        <?php if (isset($_GET['success'])): ?>
            setTimeout(() => {
                const alert = document.createElement('div');
                alert.className = 'alert alert-success alert-dismissible fade show';
                alert.innerHTML = `
                    <strong>成功!</strong> 操作已完成。
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                document.querySelector('main').prepend(alert);
            }, 100);
        <?php endif; ?>
    </script>
</body>
</html>
EOF
创建图书列表视图
bash
# 创建app/views/books/index.php
cat > app/views/books/index.php << 'EOF'
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2"><?php echo $title; ?></h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="/books/create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> 添加图书
        </a>
    </div>
</div>

<!-- 搜索框 -->
<div class="row mb-4">
    <div class="col-md-6">
        <form method="GET" action="/books">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="搜索图书名称或作者..." name="search">
                <button class="btn btn-outline-secondary" type="submit">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
</div>

<!-- 统计信息 -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-white bg-primary">
            <div class="card-body">
                <h5 class="card-title">总图书数</h5>
                <p class="card-text display-6"><?php echo $totalCount; ?></p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-success">
            <div class="card-body">
                <h5 class="card-title">在库图书</h5>
                <p class="card-text display-6"><?php echo count(array_filter($books, fn($book) => $book['status'] === '在库')); ?></p>
            </div>
        </div>
    </div>
</div>

<!-- 图书表格 -->
<div class="card">
    <div class="card-body">
        <?php if (!empty($books)): ?>
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>书名</th>
                            <th>作者</th>
                            <th>ISBN</th>
                            <th>出版社</th>
                            <th>分类</th>
                            <th>价格</th>
                            <th>状态</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach ($books as $book): ?>
                        <tr>
                            <td><?php echo $book['id']; ?></td>
                            <td>
                                <strong><?php echo htmlspecialchars($book['title']); ?></strong>
                            </td>
                            <td><?php echo htmlspecialchars($book['author']); ?></td>
                            <td><?php echo $book['isbn']; ?></td>
                            <td><?php echo htmlspecialchars($book['publisher']); ?></td>
                            <td>
                                <span class="badge bg-secondary"><?php echo $book['category']; ?></span>
                            </td>
                            <td>¥<?php echo number_format($book['price'], 2); ?></td>
                            <td>
                                <span class="badge bg-<?php echo $book['status'] === '在库' ? 'success' : 'warning'; ?>">
                                    <?php echo $book['status']; ?>
                                </span>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <a href="/books/<?php echo $book['id']; ?>" class="btn btn-outline-primary">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="/books/<?php echo $book['id']; ?>/edit" class="btn btn-outline-secondary">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-outline-danger" 
                                            onclick="if(confirmDelete()) window.location.href='/books/<?php echo $book['id']; ?>/delete'">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
        <?php else: ?>
            <div class="text-center py-5">
                <i class="fas fa-book fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">暂无图书数据</h4>
                <p class="text-muted">点击上方按钮添加第一本图书</p>
            </div>
        <?php endif; ?>
    </div>
</div>
EOF
创建添加图书视图
bash
# 创建app/views/books/create.php
cat > app/views/books/create.php << 'EOF'
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2"><?php echo $title; ?></h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="/books" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-1"></i> 返回列表
        </a>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <?php if (!empty($errors)): ?>
                    <div class="alert alert-danger">
                        <ul class="mb-0">
                            <?php foreach ($errors as $error): ?>
                                <li><?php echo $error; ?></li>
                            <?php endforeach; ?>
                        </ul>
                    </div>
                <?php endif; ?>

                <form method="POST" action="/books/create">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="title" class="form-label">书名 <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="title" name="title" 
                                       value="<?php echo isset($book['title']) ? htmlspecialchars($book['title']) : ''; ?>" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="author" class="form-label">作者 <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="author" name="author" 
                                       value="<?php echo isset($book['author']) ? htmlspecialchars($book['author']) : ''; ?>" required>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="isbn" class="form-label">ISBN <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="isbn" name="isbn" 
                                       value="<?php echo isset($book['isbn']) ? htmlspecialchars($book['isbn']) : ''; ?>" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="publisher" class="form-label">出版社</label>
                                <input type="text" class="form-control" id="publisher" name="publisher" 
                                       value="<?php echo isset($book['publisher']) ? htmlspecialchars($book['publisher']) : ''; ?>">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="publish_year" class="form-label">出版年份</label>
                                <input type="number" class="form-control" id="publish_year" name="publish_year" 
                                       value="<?php echo isset($book['publish_year']) ? $book['publish_year'] : date('Y'); ?>" 
                                       min="1900" max="<?php echo date('Y'); ?>">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="category" class="form-label">分类</label>
                                <select class="form-select" id="category" name="category">
                                    <option value="">选择分类</option>
                                    <option value="编程" <?php echo (isset($book['category']) && $book['category'] === '编程') ? 'selected' : ''; ?>>编程</option>
                                    <option value="数据库" <?php echo (isset($book['category']) && $book['category'] === '数据库') ? 'selected' : ''; ?>>数据库</option>
                                    <option value="前端" <?php echo (isset($book['category']) && $book['category'] === '前端') ? 'selected' : ''; ?>>前端</option>
                                    <option value="设计" <?php echo (isset($book['category']) && $book['category'] === '设计') ? 'selected' : ''; ?>>设计</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="price" class="form-label">价格 (¥)</label>
                                <input type="number" step="0.01" class="form-control" id="price" name="price" 
                                       value="<?php echo isset($book['price']) ? $book['price'] : ''; ?>">
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">图书描述</label>
                        <textarea class="form-control" id="description" name="description" rows="4"><?php echo isset($book['description']) ? htmlspecialchars($book['description']) : ''; ?></textarea>
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="reset" class="btn btn-secondary">重置</button>
                        <button type="submit" class="btn btn-primary">添加图书</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
EOF
4.8 创建CSS和JS文件
bash
# 创建public/css/style.css
cat > public/css/style.css << 'EOF'
/* 自定义样式 */
:root {
    --primary-color: #3498db;
    --secondary-color: #2c3e50;
    --success-color: #27ae60;
    --warning-color: #f39c12;
    --danger-color: #e74c3c;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f8f9fa;
}

.sidebar {
    background: linear-gradient(180deg, var(--secondary-color), #1a252f);
}

.navbar-brand {
    font-weight: 600;
}

.book-card {
    border: none;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.book-card:hover {
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
}

.stat-card {
    border-radius: 10px;
    border: none;
}

.btn-primary {
    background: linear-gradient(45deg, var(--primary-color), #2980b9);
    border: none;
}

.btn-primary:hover {
    background: linear-gradient(45deg, #2980b9, var(--primary-color));
}

.table th {
    border-top: none;
    font-weight: 600;
    color: var(--secondary-color);
}

/* 响应式设计 */
@media (max-width: 768px) {
    .sidebar {
        position: fixed;
        top: 56px;
        left: -100%;
        width: 100%;
        height: calc(100vh - 56px);
        transition: left 0.3s ease;
        z-index: 1000;
    }
    
    .sidebar.show {
        left: 0;
    }
}
EOF
第五步：提交到GitHub
5.1 添加文件到Git
bash
# 添加所有文件到暂存区
git add .

# 查看文件状态
git status

# 提交更改
git commit -m "初始化项目：创建完整的MVC架构文件夹结构

- 创建app/目录结构（controllers, models, views, config, core, middleware）
- 创建public/入口文件和静态资源
- 实现基础控制器和模型
- 创建图书管理相关视图
- 添加Bootstrap和Font Awesome依赖
- 创建README文档"

# 推送到GitHub
git push origin main
5.2 创建.gitignore文件（可选）
bash
# 创建.gitignore文件
cat > .gitignore << 'EOF'
# 依赖目录
/vendor/

# 环境配置文件
.env
.env.local
.env.production

# 日志文件
/storage/logs/*.log

# 缓存文件
/storage/cache/*

# 上传文件
/public/uploads/*

# 系统文件
.DS_Store
Thumbs.db

# IDE文件
.vscode/
.idea/
*.swp
*.swo

# 临时文件
*.tmp
*.temp
EOF

# 添加.gitignore并提交
git add .gitignore
git commit -m "添加.gitignore文件"
git push origin main
第六步：验证项目结构
6.1 检查最终文件夹结构
在终端中运行：

bash
# 显示完整的文件夹结构
find . -type f -not -path "./.git/*" | sort
